// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BrokerSilo.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_BrokerSilo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_BrokerSilo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_BrokerSilo_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_BrokerSilo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_BrokerSilo_2eproto;
namespace brokersilo {
class DiffieHellmanParams;
struct DiffieHellmanParamsDefaultTypeInternal;
extern DiffieHellmanParamsDefaultTypeInternal _DiffieHellmanParams_default_instance_;
class DiffieHellmanRg;
struct DiffieHellmanRgDefaultTypeInternal;
extern DiffieHellmanRgDefaultTypeInternal _DiffieHellmanRg_default_instance_;
class EncryptData;
struct EncryptDataDefaultTypeInternal;
extern EncryptDataDefaultTypeInternal _EncryptData_default_instance_;
class Number;
struct NumberDefaultTypeInternal;
extern NumberDefaultTypeInternal _Number_default_instance_;
class Vector;
struct VectorDefaultTypeInternal;
extern VectorDefaultTypeInternal _Vector_default_instance_;
class knnQuery;
struct knnQueryDefaultTypeInternal;
extern knnQueryDefaultTypeInternal _knnQuery_default_instance_;
}  // namespace brokersilo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace brokersilo {

// ===================================================================


// -------------------------------------------------------------------

class knnQuery final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokersilo.knnQuery) */ {
 public:
  inline knnQuery() : knnQuery(nullptr) {}
  ~knnQuery() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR knnQuery(::google::protobuf::internal::ConstantInitialized);

  inline knnQuery(const knnQuery& from)
      : knnQuery(nullptr, from) {}
  knnQuery(knnQuery&& from) noexcept
    : knnQuery() {
    *this = ::std::move(from);
  }

  inline knnQuery& operator=(const knnQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline knnQuery& operator=(knnQuery&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const knnQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const knnQuery* internal_default_instance() {
    return reinterpret_cast<const knnQuery*>(
               &_knnQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(knnQuery& a, knnQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(knnQuery* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(knnQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  knnQuery* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<knnQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const knnQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const knnQuery& from) {
    knnQuery::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(knnQuery* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brokersilo.knnQuery";
  }
  protected:
  explicit knnQuery(::google::protobuf::Arena* arena);
  knnQuery(::google::protobuf::Arena* arena, const knnQuery& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kConditionFieldNumber = 3,
    kKFieldNumber = 2,
    kQidFieldNumber = 4,
  };
  // repeated float data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField<float>& data() const;
  ::google::protobuf::RepeatedField<float>* mutable_data();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_data() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_data();

  public:
  // string condition = 3;
  void clear_condition() ;
  const std::string& condition() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_condition(Arg_&& arg, Args_... args);
  std::string* mutable_condition();
  PROTOBUF_NODISCARD std::string* release_condition();
  void set_allocated_condition(std::string* value);

  private:
  const std::string& _internal_condition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_condition(
      const std::string& value);
  std::string* _internal_mutable_condition();

  public:
  // int32 k = 2;
  void clear_k() ;
  ::int32_t k() const;
  void set_k(::int32_t value);

  private:
  ::int32_t _internal_k() const;
  void _internal_set_k(::int32_t value);

  public:
  // int32 qid = 4;
  void clear_qid() ;
  ::int32_t qid() const;
  void set_qid(::int32_t value);

  private:
  ::int32_t _internal_qid() const;
  void _internal_set_qid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:brokersilo.knnQuery)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<float> data_;
    ::google::protobuf::internal::ArenaStringPtr condition_;
    ::int32_t k_;
    ::int32_t qid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_BrokerSilo_2eproto;
};// -------------------------------------------------------------------

class Vector final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokersilo.Vector) */ {
 public:
  inline Vector() : Vector(nullptr) {}
  ~Vector() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Vector(::google::protobuf::internal::ConstantInitialized);

  inline Vector(const Vector& from)
      : Vector(nullptr, from) {}
  Vector(Vector&& from) noexcept
    : Vector() {
    *this = ::std::move(from);
  }

  inline Vector& operator=(const Vector& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector& operator=(Vector&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector* internal_default_instance() {
    return reinterpret_cast<const Vector*>(
               &_Vector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Vector& a, Vector& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vector& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Vector& from) {
    Vector::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Vector* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brokersilo.Vector";
  }
  protected:
  explicit Vector(::google::protobuf::Arena* arena);
  Vector(::google::protobuf::Arena* arena, const Vector& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kAttributeFieldNumber = 3,
    kIdFieldNumber = 1,
    kDistanceFieldNumber = 4,
  };
  // repeated float data = 2;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField<float>& data() const;
  ::google::protobuf::RepeatedField<float>* mutable_data();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_data() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_data();

  public:
  // string attribute = 3;
  void clear_attribute() ;
  const std::string& attribute() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attribute(Arg_&& arg, Args_... args);
  std::string* mutable_attribute();
  PROTOBUF_NODISCARD std::string* release_attribute();
  void set_allocated_attribute(std::string* value);

  private:
  const std::string& _internal_attribute() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attribute(
      const std::string& value);
  std::string* _internal_mutable_attribute();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // float distance = 4;
  void clear_distance() ;
  float distance() const;
  void set_distance(float value);

  private:
  float _internal_distance() const;
  void _internal_set_distance(float value);

  public:
  // @@protoc_insertion_point(class_scope:brokersilo.Vector)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<float> data_;
    ::google::protobuf::internal::ArenaStringPtr attribute_;
    ::int32_t id_;
    float distance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_BrokerSilo_2eproto;
};// -------------------------------------------------------------------

class Number final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokersilo.Number) */ {
 public:
  inline Number() : Number(nullptr) {}
  ~Number() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Number(::google::protobuf::internal::ConstantInitialized);

  inline Number(const Number& from)
      : Number(nullptr, from) {}
  Number(Number&& from) noexcept
    : Number() {
    *this = ::std::move(from);
  }

  inline Number& operator=(const Number& from) {
    CopyFrom(from);
    return *this;
  }
  inline Number& operator=(Number&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Number& default_instance() {
    return *internal_default_instance();
  }
  static inline const Number* internal_default_instance() {
    return reinterpret_cast<const Number*>(
               &_Number_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Number& a, Number& b) {
    a.Swap(&b);
  }
  inline void Swap(Number* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Number* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Number* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Number>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Number& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Number& from) {
    Number::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Number* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brokersilo.Number";
  }
  protected:
  explicit Number(::google::protobuf::Arena* arena);
  Number(::google::protobuf::Arena* arena, const Number& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumFieldNumber = 1,
  };
  // int32 num = 1;
  void clear_num() ;
  ::int32_t num() const;
  void set_num(::int32_t value);

  private:
  ::int32_t _internal_num() const;
  void _internal_set_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:brokersilo.Number)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_BrokerSilo_2eproto;
};// -------------------------------------------------------------------

class EncryptData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokersilo.EncryptData) */ {
 public:
  inline EncryptData() : EncryptData(nullptr) {}
  ~EncryptData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EncryptData(::google::protobuf::internal::ConstantInitialized);

  inline EncryptData(const EncryptData& from)
      : EncryptData(nullptr, from) {}
  EncryptData(EncryptData&& from) noexcept
    : EncryptData() {
    *this = ::std::move(from);
  }

  inline EncryptData& operator=(const EncryptData& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptData& operator=(EncryptData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EncryptData& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptData* internal_default_instance() {
    return reinterpret_cast<const EncryptData*>(
               &_EncryptData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EncryptData& a, EncryptData& b) {
    a.Swap(&b);
  }
  inline void Swap(EncryptData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EncryptData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EncryptData& from) {
    EncryptData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EncryptData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brokersilo.EncryptData";
  }
  protected:
  explicit EncryptData(::google::protobuf::Arena* arena);
  EncryptData(::google::protobuf::Arena* arena, const EncryptData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:brokersilo.EncryptData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_BrokerSilo_2eproto;
};// -------------------------------------------------------------------

class DiffieHellmanRg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokersilo.DiffieHellmanRg) */ {
 public:
  inline DiffieHellmanRg() : DiffieHellmanRg(nullptr) {}
  ~DiffieHellmanRg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DiffieHellmanRg(::google::protobuf::internal::ConstantInitialized);

  inline DiffieHellmanRg(const DiffieHellmanRg& from)
      : DiffieHellmanRg(nullptr, from) {}
  DiffieHellmanRg(DiffieHellmanRg&& from) noexcept
    : DiffieHellmanRg() {
    *this = ::std::move(from);
  }

  inline DiffieHellmanRg& operator=(const DiffieHellmanRg& from) {
    CopyFrom(from);
    return *this;
  }
  inline DiffieHellmanRg& operator=(DiffieHellmanRg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DiffieHellmanRg& default_instance() {
    return *internal_default_instance();
  }
  static inline const DiffieHellmanRg* internal_default_instance() {
    return reinterpret_cast<const DiffieHellmanRg*>(
               &_DiffieHellmanRg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DiffieHellmanRg& a, DiffieHellmanRg& b) {
    a.Swap(&b);
  }
  inline void Swap(DiffieHellmanRg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DiffieHellmanRg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DiffieHellmanRg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DiffieHellmanRg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DiffieHellmanRg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DiffieHellmanRg& from) {
    DiffieHellmanRg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DiffieHellmanRg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brokersilo.DiffieHellmanRg";
  }
  protected:
  explicit DiffieHellmanRg(::google::protobuf::Arena* arena);
  DiffieHellmanRg(::google::protobuf::Arena* arena, const DiffieHellmanRg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRgModPFieldNumber = 1,
  };
  // uint64 rg_mod_p = 1;
  void clear_rg_mod_p() ;
  ::uint64_t rg_mod_p() const;
  void set_rg_mod_p(::uint64_t value);

  private:
  ::uint64_t _internal_rg_mod_p() const;
  void _internal_set_rg_mod_p(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:brokersilo.DiffieHellmanRg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t rg_mod_p_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_BrokerSilo_2eproto;
};// -------------------------------------------------------------------

class DiffieHellmanParams final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokersilo.DiffieHellmanParams) */ {
 public:
  inline DiffieHellmanParams() : DiffieHellmanParams(nullptr) {}
  ~DiffieHellmanParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DiffieHellmanParams(::google::protobuf::internal::ConstantInitialized);

  inline DiffieHellmanParams(const DiffieHellmanParams& from)
      : DiffieHellmanParams(nullptr, from) {}
  DiffieHellmanParams(DiffieHellmanParams&& from) noexcept
    : DiffieHellmanParams() {
    *this = ::std::move(from);
  }

  inline DiffieHellmanParams& operator=(const DiffieHellmanParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline DiffieHellmanParams& operator=(DiffieHellmanParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DiffieHellmanParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const DiffieHellmanParams* internal_default_instance() {
    return reinterpret_cast<const DiffieHellmanParams*>(
               &_DiffieHellmanParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DiffieHellmanParams& a, DiffieHellmanParams& b) {
    a.Swap(&b);
  }
  inline void Swap(DiffieHellmanParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DiffieHellmanParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DiffieHellmanParams* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DiffieHellmanParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DiffieHellmanParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DiffieHellmanParams& from) {
    DiffieHellmanParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DiffieHellmanParams* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "brokersilo.DiffieHellmanParams";
  }
  protected:
  explicit DiffieHellmanParams(::google::protobuf::Arena* arena);
  DiffieHellmanParams(::google::protobuf::Arena* arena, const DiffieHellmanParams& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPFieldNumber = 1,
    kGFieldNumber = 2,
  };
  // uint64 p = 1;
  void clear_p() ;
  ::uint64_t p() const;
  void set_p(::uint64_t value);

  private:
  ::uint64_t _internal_p() const;
  void _internal_set_p(::uint64_t value);

  public:
  // uint64 g = 2;
  void clear_g() ;
  ::uint64_t g() const;
  void set_g(::uint64_t value);

  private:
  ::uint64_t _internal_g() const;
  void _internal_set_g(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:brokersilo.DiffieHellmanParams)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t p_;
    ::uint64_t g_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_BrokerSilo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DiffieHellmanParams

// uint64 p = 1;
inline void DiffieHellmanParams::clear_p() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.p_ = ::uint64_t{0u};
}
inline ::uint64_t DiffieHellmanParams::p() const {
  // @@protoc_insertion_point(field_get:brokersilo.DiffieHellmanParams.p)
  return _internal_p();
}
inline void DiffieHellmanParams::set_p(::uint64_t value) {
  _internal_set_p(value);
  // @@protoc_insertion_point(field_set:brokersilo.DiffieHellmanParams.p)
}
inline ::uint64_t DiffieHellmanParams::_internal_p() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.p_;
}
inline void DiffieHellmanParams::_internal_set_p(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.p_ = value;
}

// uint64 g = 2;
inline void DiffieHellmanParams::clear_g() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.g_ = ::uint64_t{0u};
}
inline ::uint64_t DiffieHellmanParams::g() const {
  // @@protoc_insertion_point(field_get:brokersilo.DiffieHellmanParams.g)
  return _internal_g();
}
inline void DiffieHellmanParams::set_g(::uint64_t value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:brokersilo.DiffieHellmanParams.g)
}
inline ::uint64_t DiffieHellmanParams::_internal_g() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.g_;
}
inline void DiffieHellmanParams::_internal_set_g(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.g_ = value;
}

// -------------------------------------------------------------------

// DiffieHellmanRg

// uint64 rg_mod_p = 1;
inline void DiffieHellmanRg::clear_rg_mod_p() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rg_mod_p_ = ::uint64_t{0u};
}
inline ::uint64_t DiffieHellmanRg::rg_mod_p() const {
  // @@protoc_insertion_point(field_get:brokersilo.DiffieHellmanRg.rg_mod_p)
  return _internal_rg_mod_p();
}
inline void DiffieHellmanRg::set_rg_mod_p(::uint64_t value) {
  _internal_set_rg_mod_p(value);
  // @@protoc_insertion_point(field_set:brokersilo.DiffieHellmanRg.rg_mod_p)
}
inline ::uint64_t DiffieHellmanRg::_internal_rg_mod_p() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rg_mod_p_;
}
inline void DiffieHellmanRg::_internal_set_rg_mod_p(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rg_mod_p_ = value;
}

// -------------------------------------------------------------------

// knnQuery

// repeated float data = 1;
inline int knnQuery::_internal_data_size() const {
  return _internal_data().size();
}
inline int knnQuery::data_size() const {
  return _internal_data_size();
}
inline void knnQuery::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline float knnQuery::data(int index) const {
  // @@protoc_insertion_point(field_get:brokersilo.knnQuery.data)
  return _internal_data().Get(index);
}
inline void knnQuery::set_data(int index, float value) {
  _internal_mutable_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:brokersilo.knnQuery.data)
}
inline void knnQuery::add_data(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add(value);
  // @@protoc_insertion_point(field_add:brokersilo.knnQuery.data)
}
inline const ::google::protobuf::RepeatedField<float>& knnQuery::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:brokersilo.knnQuery.data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedField<float>* knnQuery::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:brokersilo.knnQuery.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::google::protobuf::RepeatedField<float>& knnQuery::_internal_data()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedField<float>* knnQuery::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// int32 k = 2;
inline void knnQuery::clear_k() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.k_ = 0;
}
inline ::int32_t knnQuery::k() const {
  // @@protoc_insertion_point(field_get:brokersilo.knnQuery.k)
  return _internal_k();
}
inline void knnQuery::set_k(::int32_t value) {
  _internal_set_k(value);
  // @@protoc_insertion_point(field_set:brokersilo.knnQuery.k)
}
inline ::int32_t knnQuery::_internal_k() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.k_;
}
inline void knnQuery::_internal_set_k(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.k_ = value;
}

// string condition = 3;
inline void knnQuery::clear_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.condition_.ClearToEmpty();
}
inline const std::string& knnQuery::condition() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:brokersilo.knnQuery.condition)
  return _internal_condition();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void knnQuery::set_condition(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.condition_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:brokersilo.knnQuery.condition)
}
inline std::string* knnQuery::mutable_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:brokersilo.knnQuery.condition)
  return _s;
}
inline const std::string& knnQuery::_internal_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.condition_.Get();
}
inline void knnQuery::_internal_set_condition(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.condition_.Set(value, GetArena());
}
inline std::string* knnQuery::_internal_mutable_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.condition_.Mutable( GetArena());
}
inline std::string* knnQuery::release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:brokersilo.knnQuery.condition)
  return _impl_.condition_.Release();
}
inline void knnQuery::set_allocated_condition(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.condition_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.condition_.IsDefault()) {
          _impl_.condition_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:brokersilo.knnQuery.condition)
}

// int32 qid = 4;
inline void knnQuery::clear_qid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.qid_ = 0;
}
inline ::int32_t knnQuery::qid() const {
  // @@protoc_insertion_point(field_get:brokersilo.knnQuery.qid)
  return _internal_qid();
}
inline void knnQuery::set_qid(::int32_t value) {
  _internal_set_qid(value);
  // @@protoc_insertion_point(field_set:brokersilo.knnQuery.qid)
}
inline ::int32_t knnQuery::_internal_qid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.qid_;
}
inline void knnQuery::_internal_set_qid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.qid_ = value;
}

// -------------------------------------------------------------------

// EncryptData

// bytes data = 1;
inline void EncryptData::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& EncryptData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:brokersilo.EncryptData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EncryptData::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:brokersilo.EncryptData.data)
}
inline std::string* EncryptData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:brokersilo.EncryptData.data)
  return _s;
}
inline const std::string& EncryptData::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void EncryptData::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* EncryptData::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* EncryptData::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:brokersilo.EncryptData.data)
  return _impl_.data_.Release();
}
inline void EncryptData::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:brokersilo.EncryptData.data)
}

// -------------------------------------------------------------------

// Number

// int32 num = 1;
inline void Number::clear_num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.num_ = 0;
}
inline ::int32_t Number::num() const {
  // @@protoc_insertion_point(field_get:brokersilo.Number.num)
  return _internal_num();
}
inline void Number::set_num(::int32_t value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:brokersilo.Number.num)
}
inline ::int32_t Number::_internal_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_;
}
inline void Number::_internal_set_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_ = value;
}

// -------------------------------------------------------------------

// Vector

// int32 id = 1;
inline void Vector::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t Vector::id() const {
  // @@protoc_insertion_point(field_get:brokersilo.Vector.id)
  return _internal_id();
}
inline void Vector::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:brokersilo.Vector.id)
}
inline ::int32_t Vector::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Vector::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// repeated float data = 2;
inline int Vector::_internal_data_size() const {
  return _internal_data().size();
}
inline int Vector::data_size() const {
  return _internal_data_size();
}
inline void Vector::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline float Vector::data(int index) const {
  // @@protoc_insertion_point(field_get:brokersilo.Vector.data)
  return _internal_data().Get(index);
}
inline void Vector::set_data(int index, float value) {
  _internal_mutable_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:brokersilo.Vector.data)
}
inline void Vector::add_data(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add(value);
  // @@protoc_insertion_point(field_add:brokersilo.Vector.data)
}
inline const ::google::protobuf::RepeatedField<float>& Vector::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:brokersilo.Vector.data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedField<float>* Vector::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:brokersilo.Vector.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::google::protobuf::RepeatedField<float>& Vector::_internal_data()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedField<float>* Vector::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// string attribute = 3;
inline void Vector::clear_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attribute_.ClearToEmpty();
}
inline const std::string& Vector::attribute() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:brokersilo.Vector.attribute)
  return _internal_attribute();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Vector::set_attribute(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.attribute_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:brokersilo.Vector.attribute)
}
inline std::string* Vector::mutable_attribute() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attribute();
  // @@protoc_insertion_point(field_mutable:brokersilo.Vector.attribute)
  return _s;
}
inline const std::string& Vector::_internal_attribute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.attribute_.Get();
}
inline void Vector::_internal_set_attribute(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.attribute_.Set(value, GetArena());
}
inline std::string* Vector::_internal_mutable_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.attribute_.Mutable( GetArena());
}
inline std::string* Vector::release_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:brokersilo.Vector.attribute)
  return _impl_.attribute_.Release();
}
inline void Vector::set_allocated_attribute(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attribute_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.attribute_.IsDefault()) {
          _impl_.attribute_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:brokersilo.Vector.attribute)
}

// float distance = 4;
inline void Vector::clear_distance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.distance_ = 0;
}
inline float Vector::distance() const {
  // @@protoc_insertion_point(field_get:brokersilo.Vector.distance)
  return _internal_distance();
}
inline void Vector::set_distance(float value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:brokersilo.Vector.distance)
}
inline float Vector::_internal_distance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_;
}
inline void Vector::_internal_set_distance(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace brokersilo


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_BrokerSilo_2eproto_2epb_2eh
