// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BrokerSilo.proto

#include "BrokerSilo.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace brokersilo {

inline constexpr knnQuery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        condition_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        k_{0},
        qid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR knnQuery::knnQuery(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct knnQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR knnQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~knnQueryDefaultTypeInternal() {}
  union {
    knnQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 knnQueryDefaultTypeInternal _knnQuery_default_instance_;

inline constexpr Vector::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        attribute_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        distance_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector::Vector(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorDefaultTypeInternal() {}
  union {
    Vector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorDefaultTypeInternal _Vector_default_instance_;

inline constexpr Number::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : num_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Number::Number(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NumberDefaultTypeInternal() {}
  union {
    Number _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NumberDefaultTypeInternal _Number_default_instance_;

inline constexpr EncryptData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncryptData::EncryptData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EncryptDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncryptDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncryptDataDefaultTypeInternal() {}
  union {
    EncryptData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncryptDataDefaultTypeInternal _EncryptData_default_instance_;

inline constexpr DiffieHellmanRg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rg_mod_p_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DiffieHellmanRg::DiffieHellmanRg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DiffieHellmanRgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiffieHellmanRgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiffieHellmanRgDefaultTypeInternal() {}
  union {
    DiffieHellmanRg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiffieHellmanRgDefaultTypeInternal _DiffieHellmanRg_default_instance_;

inline constexpr DiffieHellmanParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : p_{::uint64_t{0u}},
        g_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DiffieHellmanParams::DiffieHellmanParams(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DiffieHellmanParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiffieHellmanParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiffieHellmanParamsDefaultTypeInternal() {}
  union {
    DiffieHellmanParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiffieHellmanParamsDefaultTypeInternal _DiffieHellmanParams_default_instance_;
}  // namespace brokersilo
static ::_pb::Metadata file_level_metadata_BrokerSilo_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_BrokerSilo_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_BrokerSilo_2eproto = nullptr;
const ::uint32_t TableStruct_BrokerSilo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::brokersilo::DiffieHellmanParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::brokersilo::DiffieHellmanParams, _impl_.p_),
    PROTOBUF_FIELD_OFFSET(::brokersilo::DiffieHellmanParams, _impl_.g_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::brokersilo::DiffieHellmanRg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::brokersilo::DiffieHellmanRg, _impl_.rg_mod_p_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::brokersilo::knnQuery, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::brokersilo::knnQuery, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::brokersilo::knnQuery, _impl_.k_),
    PROTOBUF_FIELD_OFFSET(::brokersilo::knnQuery, _impl_.condition_),
    PROTOBUF_FIELD_OFFSET(::brokersilo::knnQuery, _impl_.qid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::brokersilo::EncryptData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::brokersilo::EncryptData, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::brokersilo::Number, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::brokersilo::Number, _impl_.num_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::brokersilo::Vector, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::brokersilo::Vector, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::brokersilo::Vector, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::brokersilo::Vector, _impl_.attribute_),
    PROTOBUF_FIELD_OFFSET(::brokersilo::Vector, _impl_.distance_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::brokersilo::DiffieHellmanParams)},
        {10, -1, -1, sizeof(::brokersilo::DiffieHellmanRg)},
        {19, -1, -1, sizeof(::brokersilo::knnQuery)},
        {31, -1, -1, sizeof(::brokersilo::EncryptData)},
        {40, -1, -1, sizeof(::brokersilo::Number)},
        {49, -1, -1, sizeof(::brokersilo::Vector)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::brokersilo::_DiffieHellmanParams_default_instance_._instance,
    &::brokersilo::_DiffieHellmanRg_default_instance_._instance,
    &::brokersilo::_knnQuery_default_instance_._instance,
    &::brokersilo::_EncryptData_default_instance_._instance,
    &::brokersilo::_Number_default_instance_._instance,
    &::brokersilo::_Vector_default_instance_._instance,
};
const char descriptor_table_protodef_BrokerSilo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020BrokerSilo.proto\022\nbrokersilo\032\033google/p"
    "rotobuf/empty.proto\"+\n\023DiffieHellmanPara"
    "ms\022\t\n\001p\030\001 \001(\004\022\t\n\001g\030\002 \001(\004\"#\n\017DiffieHellma"
    "nRg\022\020\n\010rg_mod_p\030\001 \001(\004\"C\n\010knnQuery\022\014\n\004dat"
    "a\030\001 \003(\002\022\t\n\001k\030\002 \001(\005\022\021\n\tcondition\030\003 \001(\t\022\013\n"
    "\003qid\030\004 \001(\005\"\033\n\013EncryptData\022\014\n\004data\030\001 \001(\014\""
    "\025\n\006Number\022\013\n\003num\030\001 \001(\005\"G\n\006Vector\022\n\n\002id\030\001"
    " \001(\005\022\014\n\004data\030\002 \003(\002\022\021\n\tattribute\030\003 \001(\t\022\020\n"
    "\010distance\030\004 \001(\0022\313\003\n\nBrokerSilo\022D\n\tGetPar"
    "ams\022\026.google.protobuf.Empty\032\037.brokersilo"
    ".DiffieHellmanParams\022E\n\tGetRandom\022\033.brok"
    "ersilo.DiffieHellmanRg\032\033.brokersilo.Diff"
    "ieHellmanRg\022:\n\tevaluateK\022\024.brokersilo.kn"
    "nQuery\032\027.brokersilo.EncryptData\022C\n\017reque"
    "stInterval\022\027.brokersilo.EncryptData\032\027.br"
    "okersilo.EncryptData\022=\n\tsendRange\022\027.brok"
    "ersilo.EncryptData\032\027.brokersilo.EncryptD"
    "ata\0228\n\nsendNumber\022\022.brokersilo.Number\032\026."
    "google.protobuf.Empty\0226\n\006getAns\022\026.google"
    ".protobuf.Empty\032\022.brokersilo.Vector0\001b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_BrokerSilo_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_BrokerSilo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_BrokerSilo_2eproto = {
    false,
    false,
    805,
    descriptor_table_protodef_BrokerSilo_2eproto,
    "BrokerSilo.proto",
    &descriptor_table_BrokerSilo_2eproto_once,
    descriptor_table_BrokerSilo_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_BrokerSilo_2eproto::offsets,
    file_level_metadata_BrokerSilo_2eproto,
    file_level_enum_descriptors_BrokerSilo_2eproto,
    file_level_service_descriptors_BrokerSilo_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_BrokerSilo_2eproto_getter() {
  return &descriptor_table_BrokerSilo_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_BrokerSilo_2eproto(&descriptor_table_BrokerSilo_2eproto);
namespace brokersilo {
// ===================================================================

class DiffieHellmanParams::_Internal {
 public:
};

DiffieHellmanParams::DiffieHellmanParams(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:brokersilo.DiffieHellmanParams)
}
DiffieHellmanParams::DiffieHellmanParams(
    ::google::protobuf::Arena* arena, const DiffieHellmanParams& from)
    : DiffieHellmanParams(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DiffieHellmanParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DiffieHellmanParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, p_),
           0,
           offsetof(Impl_, g_) -
               offsetof(Impl_, p_) +
               sizeof(Impl_::g_));
}
DiffieHellmanParams::~DiffieHellmanParams() {
  // @@protoc_insertion_point(destructor:brokersilo.DiffieHellmanParams)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DiffieHellmanParams::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DiffieHellmanParams::Clear() {
// @@protoc_insertion_point(message_clear_start:brokersilo.DiffieHellmanParams)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.p_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.g_) -
      reinterpret_cast<char*>(&_impl_.p_)) + sizeof(_impl_.g_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DiffieHellmanParams::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DiffieHellmanParams::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DiffieHellmanParams_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 g = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DiffieHellmanParams, _impl_.g_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DiffieHellmanParams, _impl_.g_)}},
    // uint64 p = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DiffieHellmanParams, _impl_.p_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DiffieHellmanParams, _impl_.p_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 p = 1;
    {PROTOBUF_FIELD_OFFSET(DiffieHellmanParams, _impl_.p_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 g = 2;
    {PROTOBUF_FIELD_OFFSET(DiffieHellmanParams, _impl_.g_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DiffieHellmanParams::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brokersilo.DiffieHellmanParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 p = 1;
  if (this->_internal_p() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_p(), target);
  }

  // uint64 g = 2;
  if (this->_internal_g() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_g(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brokersilo.DiffieHellmanParams)
  return target;
}

::size_t DiffieHellmanParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brokersilo.DiffieHellmanParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 p = 1;
  if (this->_internal_p() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_p());
  }

  // uint64 g = 2;
  if (this->_internal_g() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_g());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DiffieHellmanParams::_class_data_ = {
    DiffieHellmanParams::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DiffieHellmanParams::GetClassData() const {
  return &_class_data_;
}

void DiffieHellmanParams::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DiffieHellmanParams*>(&to_msg);
  auto& from = static_cast<const DiffieHellmanParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:brokersilo.DiffieHellmanParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_p() != 0) {
    _this->_internal_set_p(from._internal_p());
  }
  if (from._internal_g() != 0) {
    _this->_internal_set_g(from._internal_g());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DiffieHellmanParams::CopyFrom(const DiffieHellmanParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brokersilo.DiffieHellmanParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DiffieHellmanParams::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DiffieHellmanParams::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DiffieHellmanParams::InternalSwap(DiffieHellmanParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DiffieHellmanParams, _impl_.g_)
      + sizeof(DiffieHellmanParams::_impl_.g_)
      - PROTOBUF_FIELD_OFFSET(DiffieHellmanParams, _impl_.p_)>(
          reinterpret_cast<char*>(&_impl_.p_),
          reinterpret_cast<char*>(&other->_impl_.p_));
}

::google::protobuf::Metadata DiffieHellmanParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_BrokerSilo_2eproto_getter, &descriptor_table_BrokerSilo_2eproto_once,
      file_level_metadata_BrokerSilo_2eproto[0]);
}
// ===================================================================

class DiffieHellmanRg::_Internal {
 public:
};

DiffieHellmanRg::DiffieHellmanRg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:brokersilo.DiffieHellmanRg)
}
DiffieHellmanRg::DiffieHellmanRg(
    ::google::protobuf::Arena* arena, const DiffieHellmanRg& from)
    : DiffieHellmanRg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DiffieHellmanRg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DiffieHellmanRg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rg_mod_p_ = {};
}
DiffieHellmanRg::~DiffieHellmanRg() {
  // @@protoc_insertion_point(destructor:brokersilo.DiffieHellmanRg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DiffieHellmanRg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DiffieHellmanRg::Clear() {
// @@protoc_insertion_point(message_clear_start:brokersilo.DiffieHellmanRg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rg_mod_p_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DiffieHellmanRg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DiffieHellmanRg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DiffieHellmanRg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 rg_mod_p = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DiffieHellmanRg, _impl_.rg_mod_p_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DiffieHellmanRg, _impl_.rg_mod_p_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 rg_mod_p = 1;
    {PROTOBUF_FIELD_OFFSET(DiffieHellmanRg, _impl_.rg_mod_p_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DiffieHellmanRg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brokersilo.DiffieHellmanRg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 rg_mod_p = 1;
  if (this->_internal_rg_mod_p() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_rg_mod_p(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brokersilo.DiffieHellmanRg)
  return target;
}

::size_t DiffieHellmanRg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brokersilo.DiffieHellmanRg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 rg_mod_p = 1;
  if (this->_internal_rg_mod_p() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_rg_mod_p());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DiffieHellmanRg::_class_data_ = {
    DiffieHellmanRg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DiffieHellmanRg::GetClassData() const {
  return &_class_data_;
}

void DiffieHellmanRg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DiffieHellmanRg*>(&to_msg);
  auto& from = static_cast<const DiffieHellmanRg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:brokersilo.DiffieHellmanRg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rg_mod_p() != 0) {
    _this->_internal_set_rg_mod_p(from._internal_rg_mod_p());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DiffieHellmanRg::CopyFrom(const DiffieHellmanRg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brokersilo.DiffieHellmanRg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DiffieHellmanRg::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DiffieHellmanRg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DiffieHellmanRg::InternalSwap(DiffieHellmanRg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rg_mod_p_, other->_impl_.rg_mod_p_);
}

::google::protobuf::Metadata DiffieHellmanRg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_BrokerSilo_2eproto_getter, &descriptor_table_BrokerSilo_2eproto_once,
      file_level_metadata_BrokerSilo_2eproto[1]);
}
// ===================================================================

class knnQuery::_Internal {
 public:
};

knnQuery::knnQuery(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:brokersilo.knnQuery)
}
inline PROTOBUF_NDEBUG_INLINE knnQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        condition_(arena, from.condition_),
        _cached_size_{0} {}

knnQuery::knnQuery(
    ::google::protobuf::Arena* arena,
    const knnQuery& from)
    : ::google::protobuf::Message(arena) {
  knnQuery* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, k_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, k_),
           offsetof(Impl_, qid_) -
               offsetof(Impl_, k_) +
               sizeof(Impl_::qid_));

  // @@protoc_insertion_point(copy_constructor:brokersilo.knnQuery)
}
inline PROTOBUF_NDEBUG_INLINE knnQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        condition_(arena),
        _cached_size_{0} {}

inline void knnQuery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, k_),
           0,
           offsetof(Impl_, qid_) -
               offsetof(Impl_, k_) +
               sizeof(Impl_::qid_));
}
knnQuery::~knnQuery() {
  // @@protoc_insertion_point(destructor:brokersilo.knnQuery)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void knnQuery::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.condition_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void knnQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:brokersilo.knnQuery)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.condition_.ClearToEmpty();
  ::memset(&_impl_.k_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qid_) -
      reinterpret_cast<char*>(&_impl_.k_)) + sizeof(_impl_.qid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* knnQuery::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 37, 2> knnQuery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_knnQuery_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 qid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(knnQuery, _impl_.qid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.qid_)}},
    // repeated float data = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.data_)}},
    // int32 k = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(knnQuery, _impl_.k_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.k_)}},
    // string condition = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.condition_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float data = 1;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // int32 k = 2;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string condition = 3;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.condition_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 qid = 4;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.qid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\0\0\11\0\0\0\0"
    "brokersilo.knnQuery"
    "condition"
  }},
};

::uint8_t* knnQuery::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brokersilo.knnQuery)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float data = 1;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data(), target);
  }

  // int32 k = 2;
  if (this->_internal_k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_k(), target);
  }

  // string condition = 3;
  if (!this->_internal_condition().empty()) {
    const std::string& _s = this->_internal_condition();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "brokersilo.knnQuery.condition");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 qid = 4;
  if (this->_internal_qid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_qid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brokersilo.knnQuery)
  return target;
}

::size_t knnQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brokersilo.knnQuery)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float data = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string condition = 3;
  if (!this->_internal_condition().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_condition());
  }

  // int32 k = 2;
  if (this->_internal_k() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_k());
  }

  // int32 qid = 4;
  if (this->_internal_qid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_qid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData knnQuery::_class_data_ = {
    knnQuery::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* knnQuery::GetClassData() const {
  return &_class_data_;
}

void knnQuery::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<knnQuery*>(&to_msg);
  auto& from = static_cast<const knnQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:brokersilo.knnQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  if (!from._internal_condition().empty()) {
    _this->_internal_set_condition(from._internal_condition());
  }
  if (from._internal_k() != 0) {
    _this->_internal_set_k(from._internal_k());
  }
  if (from._internal_qid() != 0) {
    _this->_internal_set_qid(from._internal_qid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void knnQuery::CopyFrom(const knnQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brokersilo.knnQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool knnQuery::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* knnQuery::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void knnQuery::InternalSwap(knnQuery* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_, &other->_impl_.condition_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.qid_)
      + sizeof(knnQuery::_impl_.qid_)
      - PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.k_)>(
          reinterpret_cast<char*>(&_impl_.k_),
          reinterpret_cast<char*>(&other->_impl_.k_));
}

::google::protobuf::Metadata knnQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_BrokerSilo_2eproto_getter, &descriptor_table_BrokerSilo_2eproto_once,
      file_level_metadata_BrokerSilo_2eproto[2]);
}
// ===================================================================

class EncryptData::_Internal {
 public:
};

EncryptData::EncryptData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:brokersilo.EncryptData)
}
inline PROTOBUF_NDEBUG_INLINE EncryptData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

EncryptData::EncryptData(
    ::google::protobuf::Arena* arena,
    const EncryptData& from)
    : ::google::protobuf::Message(arena) {
  EncryptData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:brokersilo.EncryptData)
}
inline PROTOBUF_NDEBUG_INLINE EncryptData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void EncryptData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EncryptData::~EncryptData() {
  // @@protoc_insertion_point(destructor:brokersilo.EncryptData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EncryptData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EncryptData::Clear() {
// @@protoc_insertion_point(message_clear_start:brokersilo.EncryptData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EncryptData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EncryptData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EncryptData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(EncryptData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EncryptData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brokersilo.EncryptData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brokersilo.EncryptData)
  return target;
}

::size_t EncryptData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brokersilo.EncryptData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EncryptData::_class_data_ = {
    EncryptData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EncryptData::GetClassData() const {
  return &_class_data_;
}

void EncryptData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EncryptData*>(&to_msg);
  auto& from = static_cast<const EncryptData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:brokersilo.EncryptData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncryptData::CopyFrom(const EncryptData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brokersilo.EncryptData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EncryptData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EncryptData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EncryptData::InternalSwap(EncryptData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata EncryptData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_BrokerSilo_2eproto_getter, &descriptor_table_BrokerSilo_2eproto_once,
      file_level_metadata_BrokerSilo_2eproto[3]);
}
// ===================================================================

class Number::_Internal {
 public:
};

Number::Number(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:brokersilo.Number)
}
Number::Number(
    ::google::protobuf::Arena* arena, const Number& from)
    : Number(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Number::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Number::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_ = {};
}
Number::~Number() {
  // @@protoc_insertion_point(destructor:brokersilo.Number)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Number::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Number::Clear() {
// @@protoc_insertion_point(message_clear_start:brokersilo.Number)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Number::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Number::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Number_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Number, _impl_.num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Number, _impl_.num_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 num = 1;
    {PROTOBUF_FIELD_OFFSET(Number, _impl_.num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Number::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brokersilo.Number)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brokersilo.Number)
  return target;
}

::size_t Number::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brokersilo.Number)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Number::_class_data_ = {
    Number::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Number::GetClassData() const {
  return &_class_data_;
}

void Number::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Number*>(&to_msg);
  auto& from = static_cast<const Number&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:brokersilo.Number)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Number::CopyFrom(const Number& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brokersilo.Number)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Number::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Number::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Number::InternalSwap(Number* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.num_, other->_impl_.num_);
}

::google::protobuf::Metadata Number::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_BrokerSilo_2eproto_getter, &descriptor_table_BrokerSilo_2eproto_once,
      file_level_metadata_BrokerSilo_2eproto[4]);
}
// ===================================================================

class Vector::_Internal {
 public:
};

Vector::Vector(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:brokersilo.Vector)
}
inline PROTOBUF_NDEBUG_INLINE Vector::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        attribute_(arena, from.attribute_),
        _cached_size_{0} {}

Vector::Vector(
    ::google::protobuf::Arena* arena,
    const Vector& from)
    : ::google::protobuf::Message(arena) {
  Vector* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, distance_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::distance_));

  // @@protoc_insertion_point(copy_constructor:brokersilo.Vector)
}
inline PROTOBUF_NDEBUG_INLINE Vector::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        attribute_(arena),
        _cached_size_{0} {}

inline void Vector::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, distance_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::distance_));
}
Vector::~Vector() {
  // @@protoc_insertion_point(destructor:brokersilo.Vector)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.attribute_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:brokersilo.Vector)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.attribute_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.distance_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.distance_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Vector::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 35, 2> Vector::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vector_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float distance = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.distance_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Vector, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.id_)}},
    // repeated float data = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.data_)}},
    // string attribute = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.attribute_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated float data = 2;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // string attribute = 3;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.attribute_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float distance = 4;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.distance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\21\0\0\11\0\0\0\0"
    "brokersilo.Vector"
    "attribute"
  }},
};

::uint8_t* Vector::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brokersilo.Vector)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // repeated float data = 2;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_data(), target);
  }

  // string attribute = 3;
  if (!this->_internal_attribute().empty()) {
    const std::string& _s = this->_internal_attribute();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "brokersilo.Vector.attribute");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // float distance = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_distance = this->_internal_distance();
  ::uint32_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_distance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brokersilo.Vector)
  return target;
}

::size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brokersilo.Vector)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float data = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string attribute = 3;
  if (!this->_internal_attribute().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_attribute());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // float distance = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_distance = this->_internal_distance();
  ::uint32_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Vector::_class_data_ = {
    Vector::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Vector::GetClassData() const {
  return &_class_data_;
}

void Vector::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Vector*>(&to_msg);
  auto& from = static_cast<const Vector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:brokersilo.Vector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  if (!from._internal_attribute().empty()) {
    _this->_internal_set_attribute(from._internal_attribute());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_distance = from._internal_distance();
  ::uint32_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    _this->_internal_set_distance(from._internal_distance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brokersilo.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vector::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Vector::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Vector::InternalSwap(Vector* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.attribute_, &other->_impl_.attribute_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector, _impl_.distance_)
      + sizeof(Vector::_impl_.distance_)
      - PROTOBUF_FIELD_OFFSET(Vector, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_BrokerSilo_2eproto_getter, &descriptor_table_BrokerSilo_2eproto_once,
      file_level_metadata_BrokerSilo_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace brokersilo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
