// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserBroker.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_UserBroker_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_UserBroker_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_UserBroker_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_UserBroker_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_UserBroker_2eproto;
namespace userbroker {
class knnQuery;
struct knnQueryDefaultTypeInternal;
extern knnQueryDefaultTypeInternal _knnQuery_default_instance_;
class rpcComm;
struct rpcCommDefaultTypeInternal;
extern rpcCommDefaultTypeInternal _rpcComm_default_instance_;
}  // namespace userbroker
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace userbroker {

// ===================================================================


// -------------------------------------------------------------------

class rpcComm final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userbroker.rpcComm) */ {
 public:
  inline rpcComm() : rpcComm(nullptr) {}
  ~rpcComm() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR rpcComm(::google::protobuf::internal::ConstantInitialized);

  inline rpcComm(const rpcComm& from)
      : rpcComm(nullptr, from) {}
  rpcComm(rpcComm&& from) noexcept
    : rpcComm() {
    *this = ::std::move(from);
  }

  inline rpcComm& operator=(const rpcComm& from) {
    CopyFrom(from);
    return *this;
  }
  inline rpcComm& operator=(rpcComm&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const rpcComm& default_instance() {
    return *internal_default_instance();
  }
  static inline const rpcComm* internal_default_instance() {
    return reinterpret_cast<const rpcComm*>(
               &_rpcComm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(rpcComm& a, rpcComm& b) {
    a.Swap(&b);
  }
  inline void Swap(rpcComm* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(rpcComm* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  rpcComm* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<rpcComm>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const rpcComm& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const rpcComm& from) {
    rpcComm::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(rpcComm* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "userbroker.rpcComm";
  }
  protected:
  explicit rpcComm(::google::protobuf::Arena* arena);
  rpcComm(::google::protobuf::Arena* arena, const rpcComm& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRpcDataNumFieldNumber = 1,
  };
  // int64 rpcDataNum = 1;
  void clear_rpcdatanum() ;
  ::int64_t rpcdatanum() const;
  void set_rpcdatanum(::int64_t value);

  private:
  ::int64_t _internal_rpcdatanum() const;
  void _internal_set_rpcdatanum(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:userbroker.rpcComm)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t rpcdatanum_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_UserBroker_2eproto;
};// -------------------------------------------------------------------

class knnQuery final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:userbroker.knnQuery) */ {
 public:
  inline knnQuery() : knnQuery(nullptr) {}
  ~knnQuery() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR knnQuery(::google::protobuf::internal::ConstantInitialized);

  inline knnQuery(const knnQuery& from)
      : knnQuery(nullptr, from) {}
  knnQuery(knnQuery&& from) noexcept
    : knnQuery() {
    *this = ::std::move(from);
  }

  inline knnQuery& operator=(const knnQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline knnQuery& operator=(knnQuery&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const knnQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const knnQuery* internal_default_instance() {
    return reinterpret_cast<const knnQuery*>(
               &_knnQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(knnQuery& a, knnQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(knnQuery* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(knnQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  knnQuery* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<knnQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const knnQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const knnQuery& from) {
    knnQuery::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(knnQuery* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "userbroker.knnQuery";
  }
  protected:
  explicit knnQuery(::google::protobuf::Arena* arena);
  knnQuery(::google::protobuf::Arena* arena, const knnQuery& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kConditionFieldNumber = 3,
    kKFieldNumber = 2,
    kQidFieldNumber = 4,
  };
  // repeated float data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField<float>& data() const;
  ::google::protobuf::RepeatedField<float>* mutable_data();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_data() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_data();

  public:
  // string condition = 3;
  void clear_condition() ;
  const std::string& condition() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_condition(Arg_&& arg, Args_... args);
  std::string* mutable_condition();
  PROTOBUF_NODISCARD std::string* release_condition();
  void set_allocated_condition(std::string* value);

  private:
  const std::string& _internal_condition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_condition(
      const std::string& value);
  std::string* _internal_mutable_condition();

  public:
  // int32 k = 2;
  void clear_k() ;
  ::int32_t k() const;
  void set_k(::int32_t value);

  private:
  ::int32_t _internal_k() const;
  void _internal_set_k(::int32_t value);

  public:
  // int32 qid = 4;
  void clear_qid() ;
  ::int32_t qid() const;
  void set_qid(::int32_t value);

  private:
  ::int32_t _internal_qid() const;
  void _internal_set_qid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:userbroker.knnQuery)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<float> data_;
    ::google::protobuf::internal::ArenaStringPtr condition_;
    ::int32_t k_;
    ::int32_t qid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_UserBroker_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// knnQuery

// repeated float data = 1;
inline int knnQuery::_internal_data_size() const {
  return _internal_data().size();
}
inline int knnQuery::data_size() const {
  return _internal_data_size();
}
inline void knnQuery::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline float knnQuery::data(int index) const {
  // @@protoc_insertion_point(field_get:userbroker.knnQuery.data)
  return _internal_data().Get(index);
}
inline void knnQuery::set_data(int index, float value) {
  _internal_mutable_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:userbroker.knnQuery.data)
}
inline void knnQuery::add_data(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add(value);
  // @@protoc_insertion_point(field_add:userbroker.knnQuery.data)
}
inline const ::google::protobuf::RepeatedField<float>& knnQuery::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:userbroker.knnQuery.data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedField<float>* knnQuery::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:userbroker.knnQuery.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::google::protobuf::RepeatedField<float>& knnQuery::_internal_data()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedField<float>* knnQuery::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// int32 k = 2;
inline void knnQuery::clear_k() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.k_ = 0;
}
inline ::int32_t knnQuery::k() const {
  // @@protoc_insertion_point(field_get:userbroker.knnQuery.k)
  return _internal_k();
}
inline void knnQuery::set_k(::int32_t value) {
  _internal_set_k(value);
  // @@protoc_insertion_point(field_set:userbroker.knnQuery.k)
}
inline ::int32_t knnQuery::_internal_k() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.k_;
}
inline void knnQuery::_internal_set_k(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.k_ = value;
}

// string condition = 3;
inline void knnQuery::clear_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.condition_.ClearToEmpty();
}
inline const std::string& knnQuery::condition() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:userbroker.knnQuery.condition)
  return _internal_condition();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void knnQuery::set_condition(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.condition_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:userbroker.knnQuery.condition)
}
inline std::string* knnQuery::mutable_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:userbroker.knnQuery.condition)
  return _s;
}
inline const std::string& knnQuery::_internal_condition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.condition_.Get();
}
inline void knnQuery::_internal_set_condition(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.condition_.Set(value, GetArena());
}
inline std::string* knnQuery::_internal_mutable_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.condition_.Mutable( GetArena());
}
inline std::string* knnQuery::release_condition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:userbroker.knnQuery.condition)
  return _impl_.condition_.Release();
}
inline void knnQuery::set_allocated_condition(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.condition_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.condition_.IsDefault()) {
          _impl_.condition_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:userbroker.knnQuery.condition)
}

// int32 qid = 4;
inline void knnQuery::clear_qid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.qid_ = 0;
}
inline ::int32_t knnQuery::qid() const {
  // @@protoc_insertion_point(field_get:userbroker.knnQuery.qid)
  return _internal_qid();
}
inline void knnQuery::set_qid(::int32_t value) {
  _internal_set_qid(value);
  // @@protoc_insertion_point(field_set:userbroker.knnQuery.qid)
}
inline ::int32_t knnQuery::_internal_qid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.qid_;
}
inline void knnQuery::_internal_set_qid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.qid_ = value;
}

// -------------------------------------------------------------------

// rpcComm

// int64 rpcDataNum = 1;
inline void rpcComm::clear_rpcdatanum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rpcdatanum_ = ::int64_t{0};
}
inline ::int64_t rpcComm::rpcdatanum() const {
  // @@protoc_insertion_point(field_get:userbroker.rpcComm.rpcDataNum)
  return _internal_rpcdatanum();
}
inline void rpcComm::set_rpcdatanum(::int64_t value) {
  _internal_set_rpcdatanum(value);
  // @@protoc_insertion_point(field_set:userbroker.rpcComm.rpcDataNum)
}
inline ::int64_t rpcComm::_internal_rpcdatanum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rpcdatanum_;
}
inline void rpcComm::_internal_set_rpcdatanum(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rpcdatanum_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace userbroker


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_UserBroker_2eproto_2epb_2eh
