// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserBroker.proto

#include "UserBroker.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace userbroker {

inline constexpr rpcComm::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rpcdatanum_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR rpcComm::rpcComm(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct rpcCommDefaultTypeInternal {
  PROTOBUF_CONSTEXPR rpcCommDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~rpcCommDefaultTypeInternal() {}
  union {
    rpcComm _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 rpcCommDefaultTypeInternal _rpcComm_default_instance_;

inline constexpr knnQuery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        condition_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        k_{0},
        qid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR knnQuery::knnQuery(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct knnQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR knnQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~knnQueryDefaultTypeInternal() {}
  union {
    knnQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 knnQueryDefaultTypeInternal _knnQuery_default_instance_;
}  // namespace userbroker
static ::_pb::Metadata file_level_metadata_UserBroker_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_UserBroker_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_UserBroker_2eproto = nullptr;
const ::uint32_t TableStruct_UserBroker_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::userbroker::knnQuery, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::userbroker::knnQuery, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::userbroker::knnQuery, _impl_.k_),
    PROTOBUF_FIELD_OFFSET(::userbroker::knnQuery, _impl_.condition_),
    PROTOBUF_FIELD_OFFSET(::userbroker::knnQuery, _impl_.qid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::userbroker::rpcComm, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::userbroker::rpcComm, _impl_.rpcdatanum_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::userbroker::knnQuery)},
        {12, -1, -1, sizeof(::userbroker::rpcComm)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::userbroker::_knnQuery_default_instance_._instance,
    &::userbroker::_rpcComm_default_instance_._instance,
};
const char descriptor_table_protodef_UserBroker_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020UserBroker.proto\022\nuserbroker\032\033google/p"
    "rotobuf/empty.proto\"C\n\010knnQuery\022\014\n\004data\030"
    "\001 \003(\002\022\t\n\001k\030\002 \001(\005\022\021\n\tcondition\030\003 \001(\t\022\013\n\003q"
    "id\030\004 \001(\005\"\035\n\007rpcComm\022\022\n\nrpcDataNum\030\001 \001(\0032"
    "\210\001\n\nUserBroker\022<\n\nrequestKNN\022\024.userbroke"
    "r.knnQuery\032\026.google.protobuf.Empty\"\000\022<\n\013"
    "requestComm\022\026.google.protobuf.Empty\032\023.us"
    "erbroker.rpcComm\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_UserBroker_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_UserBroker_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_UserBroker_2eproto = {
    false,
    false,
    306,
    descriptor_table_protodef_UserBroker_2eproto,
    "UserBroker.proto",
    &descriptor_table_UserBroker_2eproto_once,
    descriptor_table_UserBroker_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_UserBroker_2eproto::offsets,
    file_level_metadata_UserBroker_2eproto,
    file_level_enum_descriptors_UserBroker_2eproto,
    file_level_service_descriptors_UserBroker_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_UserBroker_2eproto_getter() {
  return &descriptor_table_UserBroker_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_UserBroker_2eproto(&descriptor_table_UserBroker_2eproto);
namespace userbroker {
// ===================================================================

class knnQuery::_Internal {
 public:
};

knnQuery::knnQuery(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:userbroker.knnQuery)
}
inline PROTOBUF_NDEBUG_INLINE knnQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        condition_(arena, from.condition_),
        _cached_size_{0} {}

knnQuery::knnQuery(
    ::google::protobuf::Arena* arena,
    const knnQuery& from)
    : ::google::protobuf::Message(arena) {
  knnQuery* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, k_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, k_),
           offsetof(Impl_, qid_) -
               offsetof(Impl_, k_) +
               sizeof(Impl_::qid_));

  // @@protoc_insertion_point(copy_constructor:userbroker.knnQuery)
}
inline PROTOBUF_NDEBUG_INLINE knnQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        condition_(arena),
        _cached_size_{0} {}

inline void knnQuery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, k_),
           0,
           offsetof(Impl_, qid_) -
               offsetof(Impl_, k_) +
               sizeof(Impl_::qid_));
}
knnQuery::~knnQuery() {
  // @@protoc_insertion_point(destructor:userbroker.knnQuery)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void knnQuery::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.condition_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void knnQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:userbroker.knnQuery)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.condition_.ClearToEmpty();
  ::memset(&_impl_.k_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qid_) -
      reinterpret_cast<char*>(&_impl_.k_)) + sizeof(_impl_.qid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* knnQuery::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 37, 2> knnQuery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_knnQuery_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 qid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(knnQuery, _impl_.qid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.qid_)}},
    // repeated float data = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.data_)}},
    // int32 k = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(knnQuery, _impl_.k_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.k_)}},
    // string condition = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.condition_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float data = 1;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // int32 k = 2;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string condition = 3;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.condition_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 qid = 4;
    {PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.qid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\0\0\11\0\0\0\0"
    "userbroker.knnQuery"
    "condition"
  }},
};

::uint8_t* knnQuery::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userbroker.knnQuery)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float data = 1;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data(), target);
  }

  // int32 k = 2;
  if (this->_internal_k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_k(), target);
  }

  // string condition = 3;
  if (!this->_internal_condition().empty()) {
    const std::string& _s = this->_internal_condition();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "userbroker.knnQuery.condition");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 qid = 4;
  if (this->_internal_qid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_qid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userbroker.knnQuery)
  return target;
}

::size_t knnQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userbroker.knnQuery)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float data = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string condition = 3;
  if (!this->_internal_condition().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_condition());
  }

  // int32 k = 2;
  if (this->_internal_k() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_k());
  }

  // int32 qid = 4;
  if (this->_internal_qid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_qid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData knnQuery::_class_data_ = {
    knnQuery::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* knnQuery::GetClassData() const {
  return &_class_data_;
}

void knnQuery::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<knnQuery*>(&to_msg);
  auto& from = static_cast<const knnQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userbroker.knnQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  if (!from._internal_condition().empty()) {
    _this->_internal_set_condition(from._internal_condition());
  }
  if (from._internal_k() != 0) {
    _this->_internal_set_k(from._internal_k());
  }
  if (from._internal_qid() != 0) {
    _this->_internal_set_qid(from._internal_qid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void knnQuery::CopyFrom(const knnQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userbroker.knnQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool knnQuery::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* knnQuery::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void knnQuery::InternalSwap(knnQuery* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_, &other->_impl_.condition_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.qid_)
      + sizeof(knnQuery::_impl_.qid_)
      - PROTOBUF_FIELD_OFFSET(knnQuery, _impl_.k_)>(
          reinterpret_cast<char*>(&_impl_.k_),
          reinterpret_cast<char*>(&other->_impl_.k_));
}

::google::protobuf::Metadata knnQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_UserBroker_2eproto_getter, &descriptor_table_UserBroker_2eproto_once,
      file_level_metadata_UserBroker_2eproto[0]);
}
// ===================================================================

class rpcComm::_Internal {
 public:
};

rpcComm::rpcComm(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:userbroker.rpcComm)
}
rpcComm::rpcComm(
    ::google::protobuf::Arena* arena, const rpcComm& from)
    : rpcComm(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE rpcComm::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void rpcComm::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rpcdatanum_ = {};
}
rpcComm::~rpcComm() {
  // @@protoc_insertion_point(destructor:userbroker.rpcComm)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void rpcComm::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void rpcComm::Clear() {
// @@protoc_insertion_point(message_clear_start:userbroker.rpcComm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rpcdatanum_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* rpcComm::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> rpcComm::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_rpcComm_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 rpcDataNum = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(rpcComm, _impl_.rpcdatanum_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(rpcComm, _impl_.rpcdatanum_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 rpcDataNum = 1;
    {PROTOBUF_FIELD_OFFSET(rpcComm, _impl_.rpcdatanum_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* rpcComm::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userbroker.rpcComm)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 rpcDataNum = 1;
  if (this->_internal_rpcdatanum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_rpcdatanum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userbroker.rpcComm)
  return target;
}

::size_t rpcComm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userbroker.rpcComm)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 rpcDataNum = 1;
  if (this->_internal_rpcdatanum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_rpcdatanum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData rpcComm::_class_data_ = {
    rpcComm::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* rpcComm::GetClassData() const {
  return &_class_data_;
}

void rpcComm::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<rpcComm*>(&to_msg);
  auto& from = static_cast<const rpcComm&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userbroker.rpcComm)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rpcdatanum() != 0) {
    _this->_internal_set_rpcdatanum(from._internal_rpcdatanum());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void rpcComm::CopyFrom(const rpcComm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userbroker.rpcComm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool rpcComm::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* rpcComm::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void rpcComm::InternalSwap(rpcComm* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.rpcdatanum_, other->_impl_.rpcdatanum_);
}

::google::protobuf::Metadata rpcComm::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_UserBroker_2eproto_getter, &descriptor_table_UserBroker_2eproto_once,
      file_level_metadata_UserBroker_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace userbroker
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
